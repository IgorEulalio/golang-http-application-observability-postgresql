apiVersion: apps/v1
kind: Deployment
metadata:
  name: repository-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: repository-frontend
  template:
    metadata:
      labels:
        app: repository-frontend
    spec:
      containers:
        - name: repository-frontend
          resources:
            requests:
              cpu: "100m"
              memory: "200Mi"
            limits:
              cpu: "200m"
              memory: "300Mi"
          image: igoreulalio/repository-frontend:v2
          imagePullPolicy: Always
          env:
            - name: REACT_APP_BACKEND_URL
              value: "http://repository.api.igor.dev.draios.com"
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: repository-frontend-service
spec:
  selector:
    app: repository-frontend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: ClusterIP
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: repository-frontend-ingress
#   namespace: development
#   annotations:
#     external-dns.alpha.kubernetes.io/hostname: repository.igor.dev.draios.com
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
#     # alb.ingress.kubernetes.io/group.name: repository
# spec:
#   ingressClassName: alb
#   rules:
#     - http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: repository-frontend-service
#                 port:
#                   number: 3000

